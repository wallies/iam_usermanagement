/**
 * `InternalOpenAmError` error.
 *
 * InternalOpenAmError wraps errors generated by node-openam.  By wrapping these
 * objects, error messages can be formatted in a manner that aids in debugging
 * OpenAm issues.
 *
 * @api public
 */
function InternalOpenAmError(message, err) {
  Error.call(this);
  Error.captureStackTrace(this, arguments.callee);
  this.name = 'InternalOpenAmError';
  this.message = message;
  this.oauthError = err;
};

/**
 * Inherit from `Error`.
 */
InternalOpenAmError.prototype.__proto__ = Error.prototype;

/**
 * Returns a string representing the error.
 *
 * @return {String}
 * @api public
 */
InternalOpenAmError.prototype.toString = function() {
  var m = this.message;
  if (this.openAmError) {
    if (this.openAmError instanceof Error) {
      m += ' (' + this.openAmError + ')';
    }
    else if (this.openAmError.statusCode && this.openAmError.data) {
      m += ' (status: ' + this.openAmError.statusCode + ' data: ' + this.openAmError.data + ')';
    }
  }
  return m;
}


/**
 * Expose `InternalOpenAmError`.
 */
module.exports = InternalOpenAmError;
